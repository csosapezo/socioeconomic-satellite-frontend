{"version":3,"sources":["../test/aoi.test.js"],"names":["container","beforeEach","jest","spyOn","console","error","mockImplementation","document","createElement","body","appendChild","afterEach","mockRestore","remove","it","bounds","expect","querySelector","value","toBe","Math","round","north","toString","south","west","east","textContent"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAGA,IAAIA,SAAS,GAAG,IAAhB;AACAC,UAAU,CAAC,YAAM;AACbC,EAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,EAAoB,OAApB;AACAA,EAAAA,OAAO,CAACC,KAAR,CAAcC,kBAAd,CAAiC;AAAA,WAAM,IAAN;AAAA,GAAjC;AACAN,EAAAA,SAAS,GAAGO,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAD,EAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BV,SAA1B;AACH,CALS,CAAV;AAOAW,SAAS,CAAC,YAAM;AACZP,EAAAA,OAAO,CAACC,KAAR,CAAcO,WAAd;AACA,wCAAuBZ,SAAvB;AACAA,EAAAA,SAAS,CAACa,MAAV;AACAb,EAAAA,SAAS,GAAG,IAAZ;AACH,CALQ,CAAT;AAOAc,EAAE,CAAC,kBAAD,EAAqB,YAAM;AAEzB,MAAIC,MAAM,GAAG;AACT,aAAS,CADA;AAET,aAAS,CAFA;AAGT,YAAQ,CAHC;AAIT,YAAQ;AAJC,GAAb;AAOA,sBAAI,YAAM;AAGN,wCAAO,6BAAC,YAAD;AAAK,MAAA,MAAM,EAAEA;AAAb,MAAP,EAA+Bf,SAA/B;AAEH,GALD;AAOAgB,EAAAA,MAAM,CAAChB,SAAS,CAACiB,aAAV,CAAwB,MAAxB,EAAgCC,KAAjC,CAAN,CAA8CC,IAA9C,CAAmD,CAACC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACO,KAAP,GAAe,KAA1B,IAAmC,KAApC,EAA2CC,QAA3C,EAAnD;AACAP,EAAAA,MAAM,CAAChB,SAAS,CAACiB,aAAV,CAAwB,SAAxB,EAAmCC,KAApC,CAAN,CAAiDC,IAAjD,CAAsD,CAACC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACS,KAAP,GAAe,KAA1B,IAAmC,KAApC,EAA2CD,QAA3C,EAAtD;AACAP,EAAAA,MAAM,CAAChB,SAAS,CAACiB,aAAV,CAAwB,OAAxB,EAAiCC,KAAlC,CAAN,CAA+CC,IAA/C,CAAoD,CAACC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACU,IAAP,GAAc,KAAzB,IAAkC,KAAnC,EAA0CF,QAA1C,EAApD;AACAP,EAAAA,MAAM,CAAChB,SAAS,CAACiB,aAAV,CAAwB,QAAxB,EAAkCC,KAAnC,CAAN,CAAgDC,IAAhD,CAAqD,CAACC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACW,IAAP,GAAc,KAAzB,IAAkC,KAAnC,EAA0CH,QAA1C,EAArD;AACAP,EAAAA,MAAM,CAAChB,SAAS,CAACiB,aAAV,CAAwB,YAAxB,EAAsCU,WAAvC,CAAN,CAA0DR,IAA1D,CAA+D,uBAA/D;AACAH,EAAAA,MAAM,CAAChB,SAAS,CAACiB,aAAV,CAAwB,OAAxB,EAAiCU,WAAlC,CAAN,CAAqDR,IAArD,CAA0D,aAA1D;AACAH,EAAAA,MAAM,CAAChB,SAAS,CAACiB,aAAV,CAAwB,OAAxB,EAAiCU,WAAlC,CAAN,CAAqDR,IAArD,CAA0D,aAA1D;AACH,CAvBC,CAAF","sourcesContent":["import AOI from \"../src/components/sidebar_items/aoi\"\nimport React from \"react\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\nimport { act } from \"react-dom/test-utils\"\n\n\nlet container = null;\nbeforeEach(() => {\n    jest.spyOn(console, 'error')\n    console.error.mockImplementation(() => null);\n    container = document.createElement(\"div\");\n    document.body.appendChild(container);\n});\n\nafterEach(() => {\n    console.error.mockRestore()\n    unmountComponentAtNode(container);\n    container.remove();\n    container = null;\n});\n\nit('renders AOI text', () => {\n\n    let bounds = {\n        \"north\": 0,\n        \"south\": 0,\n        \"west\": 0,\n        \"east\": 0\n    };\n\n    act(() => {\n\n\n        render(<AOI bounds={bounds}/>, container)\n\n    });\n\n    expect(container.querySelector(\"#top\").value).toBe((Math.round(bounds.north * 10000) / 10000).toString());\n    expect(container.querySelector(\"#bottom\").value).toBe((Math.round(bounds.south * 10000) / 10000).toString());\n    expect(container.querySelector(\"#left\").value).toBe((Math.round(bounds.west * 10000) / 10000).toString());\n    expect(container.querySelector(\"#right\").value).toBe((Math.round(bounds.east * 10000) / 10000).toString());\n    expect(container.querySelector(\".aoi-title\").textContent).toBe(\"Área de Interés (AOI)\")\n    expect(container.querySelector(\".btn1\").textContent).toBe(\"Seleccionar\")\n    expect(container.querySelector(\".btn2\").textContent).toBe(\"Borrar Todo\")\n});"],"file":"aoi.test.js"}