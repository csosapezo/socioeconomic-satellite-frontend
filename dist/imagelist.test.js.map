{"version":3,"sources":["../test/imagelist.test.js"],"names":["container","beforeEach","jest","spyOn","console","error","mockImplementation","document","createElement","body","appendChild","afterEach","mockRestore","remove","it","images","expect","getElementById","textContent","toBe","querySelector"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAGA,IAAIA,SAAS,GAAG,IAAhB;AACAC,UAAU,CAAC,YAAM;AACbC,EAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,EAAoB,OAApB;AACAA,EAAAA,OAAO,CAACC,KAAR,CAAcC,kBAAd,CAAiC;AAAA,WAAM,IAAN;AAAA,GAAjC;AACAN,EAAAA,SAAS,GAAGO,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAD,EAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BV,SAA1B;AACH,CALS,CAAV;AAOAW,SAAS,CAAC,YAAM;AACZP,EAAAA,OAAO,CAACC,KAAR,CAAcO,WAAd;AACA,wCAAuBZ,SAAvB;AACAA,EAAAA,SAAS,CAACa,MAAV;AACAb,EAAAA,SAAS,GAAG,IAAZ;AACH,CALQ,CAAT;AAOAc,EAAE,CAAC,kBAAD,EAAqB,YAAM;AAEzB,MAAIC,MAAM,GAAG,CAAC;AAAC,YAAQ;AAAT,GAAD,EAAkB;AAAC,YAAQ;AAAT,GAAlB,CAAb;AAEA,sBAAI,YAAM;AAGN,wCAAO,6BAAC,kBAAD;AAAW,MAAA,MAAM,EAAEA;AAAnB,MAAP,EAAqCf,SAArC;AAEH,GALD;AAOAgB,EAAAA,MAAM,CAACT,QAAQ,CAACU,cAAT,CAAwB,GAAxB,EAA6BC,WAA9B,CAAN,CAAiDC,IAAjD,CAAsD,KAAtD;AACAH,EAAAA,MAAM,CAACT,QAAQ,CAACU,cAAT,CAAwB,GAAxB,EAA6BC,WAA9B,CAAN,CAAiDC,IAAjD,CAAsD,KAAtD;AACAH,EAAAA,MAAM,CAAChB,SAAS,CAACoB,aAAV,CAAwB,aAAxB,EAAuCF,WAAxC,CAAN,CAA2DC,IAA3D,CAAgE,uBAAhE;AACAH,EAAAA,MAAM,CAAChB,SAAS,CAACoB,aAAV,CAAwB,SAAxB,EAAmCF,WAApC,CAAN,CAAuDC,IAAvD,CAA4D,mBAA5D;AACAH,EAAAA,MAAM,CAAChB,SAAS,CAACoB,aAAV,CAAwB,OAAxB,EAAiCF,WAAlC,CAAN,CAAqDC,IAArD,CAA0D,aAA1D;AACAH,EAAAA,MAAM,CAAChB,SAAS,CAACoB,aAAV,CAAwB,OAAxB,EAAiCF,WAAlC,CAAN,CAAqDC,IAArD,CAA0D,UAA1D;AACH,CAjBC,CAAF","sourcesContent":["import Imagelist  from \"../src/components/sidebar_items/imagelist\"\nimport React from \"react\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\nimport { act } from \"react-dom/test-utils\"\n\n\nlet container = null;\nbeforeEach(() => {\n    jest.spyOn(console, 'error')\n    console.error.mockImplementation(() => null);\n    container = document.createElement(\"div\");\n    document.body.appendChild(container);\n});\n\nafterEach(() => {\n    console.error.mockRestore()\n    unmountComponentAtNode(container);\n    container.remove();\n    container = null;\n});\n\nit('renders AOI text', () => {\n\n    let images = [{\"name\": \"foo\"}, {\"name\": \"bar\"}]\n\n    act(() => {\n\n\n        render(<Imagelist images={images}/>, container)\n\n    });\n\n    expect(document.getElementById(\"0\").textContent).toBe(\"foo\");\n    expect(document.getElementById(\"1\").textContent).toBe(\"bar\");\n    expect(container.querySelector(\".list-title\").textContent).toBe(\"Selección de Imágenes\")\n    expect(container.querySelector(\".header\").textContent).toBe(\"Nombre de archivo\")\n    expect(container.querySelector(\".btn1\").textContent).toBe(\"Seleccionar\")\n    expect(container.querySelector(\".btn2\").textContent).toBe(\"Regresar\")\n});"],"file":"imagelist.test.js"}